{"version":3,"sources":["assets/images/user.png","components/Profile/Dialogs/Dialogs.module.css","components/Profile/Dialogs/DialogItem/DialogItem.jsx","components/Profile/Dialogs/Message/Message.jsx","components/Profile/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Profile/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog","active","src","Avatar","alt","avatar","to","id","name","Message","message","Dialogs","messagesPage","dialogsItems","dialogs","map","d","messagesItems","messages","m","addMessage","onSubmit","values","sendMessage","newMessageBody","composeValidators","validators","value","reduce","error","validator","undefined","AddMessageForm","handleSubmit","component","Textarea","validate","required","maxLengthCreator","placeholder","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","dispatch","sendMessageAC","Component"],"mappings":"mIAAe,QAA0B,kC,mBCCzCA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,OAAS,wBAAwB,WAAa,8B,kGCaxOC,EATI,SAACC,GAChB,OACI,sBAAKC,UAAS,UAAKC,IAAEC,OAAP,YAAiBD,IAAEE,QAAjC,UACI,qBAAKC,IAAKC,IAAQC,IAAI,uCAASN,UAAWC,IAAEM,SAC5C,cAAC,IAAD,CAASC,GAAO,YAAL,OAAmBT,EAAMU,IAApC,SAA2CV,EAAMW,WCC9CC,EANC,SAACZ,GACb,OACI,qBAAKC,UAAWC,IAAEW,QAAlB,SAA4Bb,EAAMa,W,wBCkC3BC,EAhCC,SAACd,GAEb,IAAIe,EAAef,EAAMe,aACrBC,EAAeD,EAAaE,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYR,KAAMQ,EAAER,KAAMD,GAAIS,EAAET,QAC7EU,EAAgBL,EAAaM,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAST,QAASS,EAAET,aASvE,OACI,qCACI,sBAAKZ,UAAWC,IAAEe,QAAlB,UACI,qBAAKhB,UAAWC,IAAEc,aAAlB,SACKA,IAEL,qBAAKf,UAAWC,IAAEmB,SAAlB,SACKD,OAGT,qBAAKnB,UAAWC,IAAEqB,WAAlB,SACI,cAAC,EAAD,CAAgBC,SAjBX,SAACC,GACdzB,EAAM0B,YAAYD,EAAOE,yBA0B3BC,EAAoB,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAmB,SAAAC,GAAK,OAC9CD,EAAWE,QAAO,SAACC,EAAOC,GAAR,OAAsBD,GAASC,EAAUH,UAAQI,KAGjEC,EAAiB,SAAAnC,GAEnB,OACI,cAAC,IAAD,CACIwB,SAAUxB,EAAMwB,SADpB,SAEK,gBAAGY,EAAH,EAAGA,aAAH,OACD,uBAAMZ,SAAUY,EAAhB,UACI,8BACI,cAAC,IAAD,CAAOzB,KAAK,iBACL0B,UAAWC,IACXC,SAAUX,EAAkBY,IAAUC,YAAiB,KACvDC,YAAY,4BAEvB,iD,sBCvDZC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,S,QCcRE,sBACXC,aAbkB,SAACJ,GACnB,MAAO,CACH7B,aAAc6B,EAAM7B,iBAIH,SAACkC,GACtB,MAAO,CACHvB,YAAa,SAACC,GAAoBsB,EAASC,YAAcvB,UDPjC,SAACwB,GAS7B,OAFqCH,YAAQL,EAARK,EALX,SAAChD,GACvB,OAAKA,EAAM6C,OACJ,cAACM,EAAD,eAAenD,IADI,cAAC,IAAD,CAAUS,GAAG,gBCQhCsC,CAEbjC","file":"static/js/5.8760a145.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user.77e62bce.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1a5Cx\",\"dialogsItems\":\"Dialogs_dialogsItems__3y-sd\",\"dialog\":\"Dialogs_dialog__3rI-t\",\"active\":\"Dialogs_active__2AABs\",\"messages\":\"Dialogs_messages__imPAP\",\"avatar\":\"Dialogs_avatar__vyQNV\",\"addMessage\":\"Dialogs_addMessage__3clmV\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Avatar from './../../../../assets/images/user.png'\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={`${s.dialog} ${s.active}`}>\r\n            <img src={Avatar} alt=\"аватар\" className={s.avatar}/>\r\n            <NavLink to={`${'/dialogs/'}${props.id}`}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, Form} from \"react-final-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let messagesPage = props.messagesPage\r\n    let dialogsItems = messagesPage.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>)\r\n    let messagesItems = messagesPage.messages.map(m => <Message message={m.message}/>)\r\n\r\n\r\n    let addMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    /*if (!props.isAuth) return <Redirect to={\"/login\"}/>*/\r\n\r\n    return (\r\n        <>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    {dialogsItems}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    {messagesItems}\r\n                </div>\r\n            </div>\r\n            <div className={s.addMessage}>\r\n                <AddMessageForm onSubmit={addMessage}/>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;\r\n\r\nconst composeValidators = (...validators) => value =>\r\n    validators.reduce((error, validator) => error || validator(value), undefined)\r\n\r\n\r\nconst AddMessageForm = props => {\r\n\r\n    return (\r\n        <Form\r\n            onSubmit={props.onSubmit}>\r\n            {({ handleSubmit}) => (\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Field name=\"newMessageBody\"\r\n                           component={Textarea}\r\n                           validate={composeValidators(required, maxLengthCreator(30))}\r\n                           placeholder=\"Enter your message...\" />\r\n                </div>\r\n                <button>send</button>\r\n            </form>\r\n        )}\r\n        </Form>\r\n    )\r\n}","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Redirect to=\"/login\"/>\r\n        return <Component {...props}/>\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","\r\nimport {sendMessageAC} from \"../../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {dispatch(sendMessageAC(newMessageBody))}\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}