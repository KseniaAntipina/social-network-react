{"version":3,"sources":["assets/images/user.png","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","assets/images/profile-cover.jpg","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","utils/helpers.js","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","errorSubmit","setErrorSubmit","useEffect","onClick","className","s","autoFocus","onBlur","updateStatus","then","catch","onChange","e","currentTarget","ProfileDataForm","onSubmit","profile","initialValues","handleSubmit","submitError","bthEditProfile","type","profileInfoItem","name","component","Input","placeholder","style","display","Textarea","keys","contacts","map","key","profileInfoContactLink","ProfileData","isOwner","editModeOn","profileInfo","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","inputFile","useRef","content","wrapContentImageCover","src","imageCover","alt","contentImageCover","contentAvatarWrap","contentAvatar","photos","large","userPhoto","changePhotoBlock","ref","target","files","savePhoto","ownerAvatarEditor","current","click","btnChangeUserPhoto","userName","fullName","descriptionBlock","formData","saveProfile","Post","postItem","postHeader","ava","postHeaderInfo","postAuthor","postDate","date","postContent","message","postLike","like","likeCount","MyPosts","postsItems","posts","p","post","id","submitPostBox","postUserPhoto","postCreate","values","addPost","newPostText","newDate","Date","getDate","getMonth","getFullYear","currentDate","postsBlock","allPosts","composeValidators","validators","reduce","error","validator","AddPostForm","form","submitSucceeded","reset","forEach","field","resetFieldState","classname","validate","required","maxLengthCreator","bthPublishPost","MyPostsContainer","connect","state","profilePage","dispatch","addPostAC","Profile","Preloader","ProfileContainer","userId","this","match","params","authUserId","history","getProfile","getStatus","updateProfile","prevProps","prevState","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.a32e12d3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user.77e62bce.png\";","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__3729m\",\"wrapContentImageCover\":\"ProfileInfo_wrapContentImageCover__14hSb\",\"contentImageCover\":\"ProfileInfo_contentImageCover__3QIyj\",\"contentAvatarWrap\":\"ProfileInfo_contentAvatarWrap__maD4l\",\"contentAvatar\":\"ProfileInfo_contentAvatar__14WrA\",\"ownerAvatarEditor\":\"ProfileInfo_ownerAvatarEditor__37zC1\",\"changePhotoBlock\":\"ProfileInfo_changePhotoBlock__1Eknb\",\"btnChangeUserPhoto\":\"ProfileInfo_btnChangeUserPhoto__32RdG\",\"userPhoto\":\"ProfileInfo_userPhoto__VDXxK\",\"userName\":\"ProfileInfo_userName__20L_P\",\"status\":\"ProfileInfo_status__2-slu\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2HVe7\",\"bthEditProfile\":\"ProfileInfo_bthEditProfile__3vpAX\",\"profileInfoItem\":\"ProfileInfo_profileInfoItem__1NUts\",\"profileInfoContactLink\":\"ProfileInfo_profileInfoContactLink__2a9jB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitPostBox\":\"MyPosts_submitPostBox__3Ewb3\",\"postUserPhoto\":\"MyPosts_postUserPhoto__3k4hX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postItem\":\"Post_postItem__ToWHz\",\"ava\":\"Post_ava__2_-jE\",\"message\":\"Post_message__1hC_w\",\"postHeader\":\"Post_postHeader__39U4B\",\"postHeaderInfo\":\"Post_postHeaderInfo__3Focr\",\"postAuthor\":\"Post_postAuthor__1hHHq\",\"postDate\":\"Post_postDate__2X1Zn\",\"postContent\":\"Post_postContent__3ncde\",\"postLike\":\"Post_postLike__3HD9E\",\"like\":\"Post_like__ARnO3\"};","import React, {useEffect, useState} from 'react'\r\nimport s from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n    const [errorSubmit, setErrorSubmit] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n\r\n    const deActivateEditMode = () => {\r\n       return props.updateStatus(status)\r\n            .then(() => {\r\n                setEditMode(false);\r\n                setErrorSubmit(null)\r\n            })\r\n            .catch(() => {\r\n               return setErrorSubmit('Maximum message length 300 characters')\r\n            })\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n            <div onClick={() => setEditMode(true)} className={s.status}>\r\n                {props.status || \"change status...\"}\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div className={s.status}>\r\n                <input autoFocus={true}\r\n                       onBlur={deActivateEditMode}\r\n                       onChange={onStatusChange}\r\n                       value={status}\r\n                />\r\n\r\n            </div>\r\n            }\r\n            <div>{errorSubmit}</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from \"react\";\r\nimport {Field, Form} from \"react-final-form\";\r\nimport {Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\n\r\nconst ProfileDataForm = ({ onSubmit, profile}) => {\r\n\r\n    return (\r\n        <Form onSubmit={onSubmit} initialValues={profile}>\r\n            {({handleSubmit, submitError}) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <button className={`${s.bthEditProfile} btnDefault`} type=\"submit\">Save</button>\r\n                    <div className={s.profileInfoItem}>\r\n                        <Field name=\"fullName\" component={Input} placeholder=\"full name\" />\r\n                    </div>\r\n                    <div className={s.profileInfoItem}>\r\n                        <span>looking for a job</span>\r\n                        <span style={{display: 'inline-block'}}><Field component={Input} name=\"lookingForAJob\" type={\"checkbox\"}/></span>\r\n                    </div>\r\n                    <div className={s.profileInfoItem}>\r\n                        <p>My skills:</p> <Field name=\"lookingForAJobDescription\" component={Textarea} placeholder=\"my skills\"/>\r\n                    </div>\r\n                    <div className={s.profileInfoItem}>\r\n                        <p>About me:</p> <Field name=\"aboutMe\" component={Textarea} placeholder=\"about me\"/>\r\n                    </div>\r\n                    <div>{submitError && <div>{submitError}</div>}</div>\r\n                    <div className={s.profileInfoItem}>\r\n                        <p>Contacts:</p>\r\n                        {Object.keys(profile.contacts).map(key => {\r\n                        return <div key={key} className={s.profileInfoContactLink}>\r\n                            <p> {key}: </p>  <Field  component={Input} name={`contacts.${[key]}`}/>\r\n                        </div>\r\n                    })}\r\n                    </div>\r\n                </form>\r\n            )}\r\n        </Form>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileDataForm","export default __webpack_public_path__ + \"static/media/profile-cover.97a7b2bf.jpg\";","import React, {useRef, useState} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from './../../../assets/images/user.png'\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport imageCover from './../../../assets/images/profile-cover.jpg'\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const inputFile = useRef(null)\r\n    const handleClick = (e) => {\r\n        inputFile.current.click ();\r\n    };\r\n    const mainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        return props.saveProfile(formData)\r\n            .then(() => {\r\n                setEditMode(false);\r\n            })\r\n            .catch(err => err)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={s.content}>\r\n                <div className={s.wrapContentImageCover}>\r\n                    <img src={imageCover} alt={\"обложка\"} className={s.contentImageCover}/>\r\n                </div>\r\n                <div className={s.contentAvatarWrap}>\r\n                    <div className={s.contentAvatar}>\r\n                        <img src={props.profile.photos.large || userPhoto} alt={\"profile\"} className={s.userPhoto}/>\r\n                        {props.isOwner &&\r\n                        <div className={s.changePhotoBlock}>\r\n                            <input ref={inputFile} type={\"file\"} onChange={mainPhotoSelected} className={s.ownerAvatarEditor}/>\r\n                            <div onClick={handleClick} className={s.btnChangeUserPhoto}>Change photo</div>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <h1 className={s.userName}>{props.profile.fullName}</h1>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n\r\n            <div className={s.descriptionBlock}>\r\n                {\r\n                    editMode\r\n                        ? <ProfileDataForm onSubmit={onSubmit} profile={props.profile} initialValues={props.profile}/>\r\n                        : <ProfileData profile={props.profile} isOwner={props.isOwner}\r\n                                       editModeOn={() => setEditMode(true)}/>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, editModeOn}) => {\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            {isOwner && <button onClick={editModeOn} className={`${s.bthEditProfile} btnDefault`}>Edit profile</button>}\r\n            <div className={s.profileInfoItem}>\r\n                <span>Looking for a job:</span> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            <div className={s.profileInfoItem}>\r\n                 <span>My skills: </span> {profile.lookingForAJobDescription}\r\n            </div>\r\n            <div className={s.profileInfoItem}>\r\n                 <span>About me: </span> {profile.aboutMe}\r\n            </div>\r\n            <div className={s.profileInfoItem}>\r\n                 <p>Contacts: </p>\r\n                {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <>\r\n        <div className={s.profileInfoContactLink}>{contactTitle}: {contactValue}  </div>\r\n    </>\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n            <div className={s.postItem}>\r\n                <div className={s.postHeader}>\r\n                    <img className={s.ava} src={props.userPhoto} alt=\"фото пользователя\"/>\r\n                    <div className={s.postHeaderInfo}>\r\n                        <span className={s.postAuthor}>{props.userName}</span>\r\n                        <span className={s.postDate}>{props.date}</span>\r\n                    </div>\r\n                </div>\r\n                <div className={s.postContent}>\r\n                    <p className={s.message}>{props.message}</p>\r\n                </div>\r\n                <div className={s.postLike}>\r\n                    <img src=\"https://img.icons8.com/fluent/48/000000/like.png\" className={s.like} alt={\"like\"}/>\r\n                    <span>{props.likeCount}</span>\r\n                </div>\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, Form} from \"react-final-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {currentDate} from \"../../../utils/helpers\";\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsItems = props.posts.map(p => <Post userPhoto={props.profile.photos.large}\r\n                                                userName={props.profile.fullName}\r\n                                                message={p.post} key={p.id}\r\n                                                date={p.date}\r\n                                                likeCount={p.likeCount}/>)\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.newPostText, currentDate())\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={s.submitPostBox}>\r\n                <div className={s.postUserPhoto}>\r\n                    <img src={props.profile.photos.large} alt=\"фото пользователя\"/>\r\n                </div>\r\n                <div className={s.postCreate}>\r\n                    <AddPostForm onSubmit={addPost}/>\r\n                </div>\r\n            </div>\r\n            <div className={s.postsBlock}>\r\n                <div className={s.allPosts}>\r\n                    {postsItems}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyPosts;\r\n\r\nconst composeValidators = (...validators) => value =>\r\n    validators.reduce((error, validator) => error || validator(value), undefined)\r\n\r\nconst AddPostForm = props => {\r\n\r\n     return (\r\n        <Form onSubmit={props.onSubmit}>\r\n            {({handleSubmit, form, submitSucceeded, values }) => {\r\n               if (submitSucceeded) {\r\n                form.reset();\r\n                    Object.keys(values).forEach(field => form.resetFieldState(field));\r\n                }\r\n                return (\r\n                <form\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <Field name=\"newPostText\"\r\n                           classname=\"newPostText\"\r\n                           component={Textarea}\r\n                           placeholder=\"Write something here...\"\r\n                           validate={composeValidators(required, maxLengthCreator(200))}\r\n                    />\r\n                    <button className={`${s.bthPublishPost} btnDefault`}>Publish</button>\r\n\r\n                </form>\r\n            )}}\r\n        </Form>\r\n    )\r\n}","export const currentDate = () => {\r\n    const newDate = new Date();\r\n    return `${newDate.getDate()}.${newDate.getMonth()+1}.${newDate.getFullYear()}`;\r\n}\r\n\r\n\r\n\r\n","import {addPostAC} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        profile: state.profilePage.profile\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText, date) => {dispatch(addPostAC(newPostText, date))}\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\nconst Profile = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return <>\r\n        <ProfileInfo savePhoto={props.savePhoto}\r\n                     saveProfile={props.saveProfile}\r\n                     profile={props.profile}\r\n                     status={props.status}\r\n                     updateStatus={props.updateStatus}\r\n                     isOwner={props.isOwner}/>\r\n        <MyPostsContainer profile={props.profile}/>\r\n    </>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    updateProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authUserId\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.match.params.userId !== this.props.match.params.userId) {\r\n            this.updateProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <Profile {...this.props}\r\n                         savePhoto={this.props.savePhoto}\r\n                         saveProfile={this.props.saveProfile}\r\n                         isOwner={!this.props.match.params.userId}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer)"],"sourceRoot":""}