{"version":3,"sources":["assets/images/user.png","components/Profile/Dialogs/Dialogs.module.css","components/Profile/Dialogs/DialogItem/DialogItem.jsx","components/Profile/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Profile/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItemPreview","props","to","id","className","s","dialogPreview","dialogImg","active","src","Avatar","alt","avatar","dialogContent","dialogName","name","dialogContentText","message","Dialogs","dialogsItems","messagesPage","dialogs","map","d","DialogItem","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","dispatch","sendMessage","newMessageBody","sendMessageAC","Component"],"mappings":"mIAAe,QAA0B,kC,mBCCzCA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,cAAgB,+BAA+B,WAAa,4BAA4B,UAAY,2BAA2B,OAAS,wBAAwB,cAAgB,+BAA+B,WAAa,8B,kGCoB/SC,EAhBW,SAACC,GACvB,OACI,eAAC,IAAD,CAASC,GAAO,YAAL,OAAmBD,EAAME,IAAMC,UAAWC,IAAEC,cAAvD,UAEI,qBAAKF,UAAS,UAAKC,IAAEE,UAAP,YAAoBF,IAAEG,QAApC,SACI,qBAAKC,IAAKC,IAAQC,IAAI,uCAASP,UAAWC,IAAEO,WAEhD,sBAAKR,UAAWC,IAAEQ,cAAlB,UACI,qBAAKT,UAAWC,IAAES,WAAlB,SAA+Bb,EAAMc,OACrC,qBAAKX,UAAWC,IAAEW,kBAAlB,SAAsCf,EAAMgB,iBC6B7CC,G,kBAnCC,SAACjB,GAGb,IACIkB,EADelB,EAAMmB,aACOC,QAAQC,KAAI,SAAAC,GAAC,OACzC,cAACC,EAAD,CACAT,KAAMQ,EAAER,KACRZ,GAAIoB,EAAEpB,GACNc,QAASM,EAAEN,aAaf,OACI,mCACI,qBAAKb,UAAWC,IAAEgB,QAAlB,SACKF,Q,sBC5BbM,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,S,QCaRE,sBACXC,aAbkB,SAACJ,GACnB,MAAO,CACHN,aAAcM,EAAMN,iBAIH,SAACW,GACtB,MAAO,CACHC,YAAa,SAACC,GAAoBF,EAASG,YAAcD,UDNjC,SAACE,GAS7B,OAFqCL,YAAQL,EAARK,EALX,SAAC7B,GACvB,OAAKA,EAAM0B,OACJ,cAACQ,EAAD,eAAelC,IADI,cAAC,IAAD,CAAUC,GAAG,gBCOhC2B,CAEbX","file":"static/js/5.a13201ff.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user.77e62bce.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1a5Cx\",\"dialogsItems\":\"Dialogs_dialogsItems__3y-sd\",\"dialogPreview\":\"Dialogs_dialogPreview__2_Fsm\",\"dialogName\":\"Dialogs_dialogName__3tOp-\",\"dialogImg\":\"Dialogs_dialogImg__39jDT\",\"avatar\":\"Dialogs_avatar__vyQNV\",\"dialogContent\":\"Dialogs_dialogContent__1Iqgw\",\"addMessage\":\"Dialogs_addMessage__3clmV\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Avatar from './../../../../assets/images/user.png'\r\n\r\nconst DialogItemPreview = (props) => {\r\n    return (\r\n        <NavLink to={`${'/dialogs/'}${props.id}`} className={s.dialogPreview}>\r\n\r\n            <div className={`${s.dialogImg} ${s.active}`}>\r\n                <img src={Avatar} alt=\"аватар\" className={s.avatar}/>\r\n            </div>\r\n            <div className={s.dialogContent}>\r\n                <div className={s.dialogName}>{props.name}</div>\r\n                <div className={s.dialogContentText}>{props.message}</div>\r\n            </div>\r\n\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default DialogItemPreview;","import React, {useState} from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItemPreview from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, Form} from \"react-final-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\r\n    let messagesPage = props.messagesPage\r\n    let dialogsItems = messagesPage.dialogs.map(d =>\r\n        <DialogItemPreview\r\n        name={d.name}\r\n        id={d.id}\r\n        message={d.message}\r\n        />)\r\n\r\n\r\n   // let messagesItems = messagesPage.messages.map(m => <Message message={m.message}/>)\r\n\r\n\r\n    /*let addMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }*/\r\n\r\n    /*if (!props.isAuth) return <Redirect to={\"/login\"}/>*/\r\n\r\n    return (\r\n        <>\r\n            <div className={s.dialogs}>\r\n                {dialogsItems}\r\n            </div>\r\n            {/*<div className={s.addMessage}>\r\n                <AddMessageForm onSubmit={addMessage}/>\r\n            </div>*/}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;\r\n\r\nconst composeValidators = (...validators) => value =>\r\n    validators.reduce((error, validator) => error || validator(value), undefined)\r\n\r\n\r\nconst AddMessageForm = props => {\r\n\r\n    return (\r\n        <Form\r\n            onSubmit={props.onSubmit}>\r\n            {({ handleSubmit, form, submitSucceeded, values}) => {\r\n                if (submitSucceeded) {\r\n                form.reset();\r\n                Object.keys(values).forEach(field => form.resetFieldState(field));\r\n            }\r\n                return (\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Field name=\"newMessageBody\"\r\n                           component={Textarea}\r\n                           validate={composeValidators(required, maxLengthCreator(30))}\r\n                           placeholder=\"Enter your message...\" />\r\n                </div>\r\n                <button>send</button>\r\n\r\n            </form>\r\n            )}}\r\n        </Form>\r\n    )\r\n}","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Redirect to=\"/login\"/>\r\n        return <Component {...props}/>\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","import {sendMessageAC} from \"../../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {dispatch(sendMessageAC(newMessageBody))}\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}